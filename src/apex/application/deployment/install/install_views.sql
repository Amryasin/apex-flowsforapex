prompt --application/deployment/install/install_views
begin
--   Manifest
--     INSTALL: INSTALL-Views
--   Manifest End
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2020.03.31'
,p_release=>'20.1.0.00.13'
,p_default_workspace_id=>2400405578329584
,p_default_application_id=>100
,p_default_id_offset=>0
,p_default_owner=>'FLOWS4APEX'
);
wwv_flow_api.create_install_script(
 p_id=>wwv_flow_api.id(8153583912683409)
,p_install_id=>wwv_flow_api.id(14200193318202500)
,p_name=>'Views'
,p_sequence=>40
,p_script_type=>'INSTALL'
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'create or replace view flow_diagram_categories_lov',
'as',
'  select distinct',
'         dgrm_category d',
'       , dgrm_category r',
'    from flow_diagrams',
'with read only;',
'',
'create or replace view flow_diagrams_parsed_lov',
'as',
'  select dgrm.dgrm_id',
'       , dgrm.dgrm_name',
'       , dgrm.dgrm_version',
'       , dgrm.dgrm_status',
'       , dgrm.dgrm_category',
'    from flow_diagrams dgrm',
'   where exists ',
'         ( select null',
'             from flow_objects objt',
'            where objt.objt_dgrm_id = dgrm.dgrm_id',
'         )',
'    and dgrm_status in (''draft'',''released'')',
'  with read only',
'  ;',
'',
'create or replace view flow_diagrams_vw',
'as',
'  select dgrm.dgrm_id',
'       , dgrm.dgrm_name',
'       , dgrm.dgrm_version',
'       , dgrm.dgrm_status',
'       , dgrm.dgrm_category',
'       , dgrm.dgrm_last_update',
'       , dgrm.dgrm_content',
'  from flow_diagrams dgrm',
'with read only;',
'',
'create or replace view flow_instances_vw',
'as',
'  select prcs.prcs_id',
'       , prcs.prcs_name',
'       , dgrm.dgrm_id',
'       , dgrm.dgrm_name',
'       , dgrm.dgrm_version',
'       , dgrm.dgrm_status',
'       , dgrm.dgrm_category',
'       , prcs.prcs_status',
'       , prcs.prcs_init_ts',
'       , prcs.prcs_last_update',
'       , ( select prov.prov_var_vc2',
'             from flow_process_variables prov',
'            where prov.prov_var_name = ''BUSINESS_REF''',
'              and prov.prov_var_type = ''VARCHAR2''',
'              and prov.prov_prcs_id = prcs.prcs_id',
'         ) as prcs_business_ref',
'    from flow_processes prcs',
'    join flow_diagrams dgrm',
'      on dgrm.dgrm_id = prcs.prcs_dgrm_id',
'with read only;',
'',
'create or replace view flow_instance_connections_lov',
'as',
'  select cn.conn_bpmn_id',
'       , coalesce(cn.conn_name,conn_bpmn_id) conn_name',
'       , cn.conn_src_objt_id',
'       , objt.objt_bpmn_id as src_objt_bpmn_id',
'       , ins.prcs_id',
'    from flow_instances_vw ins',
'    join flow_connections cn ',
'      on cn.conn_dgrm_id = ins.dgrm_id',
'     and cn.conn_tag_name = ''bpmn:sequenceFlow''',
'    join flow_objects objt',
'      on objt.objt_id = cn.conn_src_objt_id',
'with read only;',
'',
'create or replace view flow_instance_details_vw',
'as',
'with completed_objects as (',
'        select distinct sflg.sflg_prcs_id as prcs_id, sflg.sflg_objt_id as objt_id',
'          from flow_subflow_log sflg',
'         where sflg.sflg_objt_id not in ( /*select sbfl.sbfl_last_completed',
'                                              from flow_subflows sbfl',
'                                             where sbfl.sbfl_prcs_id = sflg.sflg_prcs_id',
'                                             union*/',
'                                            select sbfl.sbfl_current',
'                                              from flow_subflows sbfl',
'                                             where sbfl.sbfl_prcs_id = sflg.sflg_prcs_id',
'                                               and sbfl.sbfl_current is not null',
'                                          )',
'), all_completed as ( ',
'    select prcs_id, ',
'           listagg( objt_id, '':'') within group (order by objt_id) as bpmn_ids',
'    from completed_objects',
'    group by prcs_id',
'), last_completed as (         -- remove in v22.1',
'  select sbfl_prcs_id as prcs_id',
'       , listagg(sbfl_last_completed, '':'') within group ( order by sbfl_last_completed ) as bpmn_ids',
'    from flow_subflows',
'   where sbfl_last_completed is not null',
'group by sbfl_prcs_id',
'), all_current as (',
'  select sbfl_prcs_id as prcs_id',
'       , listagg(sbfl_current, '':'') within group ( order by sbfl_current ) as bpmn_ids',
'    from flow_subflows',
'   where sbfl_current is not null  -- should this include  "and sbfl_status != ''error'' "???',
'group by sbfl_prcs_id',
'), all_errors as (',
'  select sbfl_prcs_id as prcs_id',
'       , listagg(sbfl_current, '':'') within group (order by sbfl_current) as bpmn_ids',
'    from flow_subflows',
'   where sbfl_current is not null',
'     and sbfl_status = ''error''',
'group by sbfl_prcs_id',
')',
'  select prcs.prcs_id',
'       , prcs.prcs_name',
'       , dgrm.dgrm_id',
'       , dgrm.dgrm_name',
'       , dgrm.dgrm_version',
'       , dgrm.dgrm_status',
'       , dgrm.dgrm_category',
'       , dgrm.dgrm_content',
'       , ( select acomp.bpmn_ids',
'             from all_completed acomp',
'            where acomp.prcs_id = prcs.prcs_id',
'         ) as all_completed',
'       , ( select lcomp.bpmn_ids',
'             from last_completed lcomp',
'            where lcomp.prcs_id = prcs.prcs_id',
'         ) as last_completed     -- remove in v22.1',
'       , ( select acurr.bpmn_ids',
'             from all_current acurr',
'            where acurr.prcs_id = prcs.prcs_id',
'         ) as all_current',
'       , ( select aerr.bpmn_ids',
'             from all_errors aerr',
'            where aerr.prcs_id = prcs.prcs_id',
'         ) as all_errors',
'       , ( select prov.prov_var_vc2',
'             from flow_process_variables prov',
'            where prov.prov_var_name = ''BUSINESS_REF''',
'              and prov.prov_var_type = ''VARCHAR2''',
'              and prov.prov_prcs_id = prcs.prcs_id',
'         ) as prcs_business_ref',
'    from flow_processes prcs',
'    join flow_diagrams dgrm',
'      on dgrm.dgrm_id = prcs.prcs_dgrm_id',
'with read only;',
'',
'create or replace view flow_instance_gateways_lov',
'as',
'  select obj.objt_id',
'       , obj.objt_bpmn_id',
'       , case when obj.objt_name is null then obj.objt_bpmn_id else obj.objt_name || '' ('' || obj.objt_bpmn_id ||'')'' end objt_name',
'       , case obj.objt_tag_name',
'           when ''bpmn:exclusiveGateway'' then ''single''',
'           when ''bpmn:inclusiveGateway'' then ''multi''',
'           else null',
'         end as select_option',
'       , ins.prcs_id',
'    from flow_instances_vw ins',
'    join flow_objects obj',
'      on obj.objt_dgrm_id = ins.dgrm_id',
'   where obj.objt_tag_name in (''bpmn:exclusiveGateway'', ''bpmn:inclusiveGateway'')',
'     and ( select count(*) from flow_connections conn where conn.conn_src_objt_id = obj.objt_id ) > 1',
'with read only;',
'',
'create or replace view flow_instance_variables_vw',
'as',
'  select prov.prov_prcs_id',
'       , prov.prov_var_name',
'       , prov.prov_var_type',
'       , prov.prov_var_vc2',
'       , prov.prov_var_num',
'       , prov.prov_var_date',
'       , prov.prov_var_clob',
'       , prcs.prcs_name',
'       , prcs.prcs_status',
'    from flow_process_variables prov',
'    join flow_processes prcs',
'      on prcs.prcs_id = prov.prov_prcs_id',
'with read only;',
'',
'create or replace view flow_subflows_vw',
'as',
'   select sbfl.sbfl_id',
'        , sbfl.sbfl_sbfl_id',
'        , sbfl.sbfl_prcs_id',
'        , coalesce( prcs.prcs_name, to_char(sbfl.sbfl_prcs_id)) as sbfl_process_name  -- flow instance ref',
'        , prcs.prcs_dgrm_id as sbfl_dgrm_id',
'        , sbfl.sbfl_dgrm_id as sbfl_sbfl_dgrm_id -- sbfl level dgrm id',
'        , dgrm.dgrm_name as sbfl_dgrm_name  -- flow name',
'        , dgrm.dgrm_version as sbfl_dgrm_version',
'        , dgrm.dgrm_status as sbfl_dgrm_status',
'        , dgrm.dgrm_category as sbfl_dgrm_category',
'        , sbfl.sbfl_starting_object',
'        , coalesce( objt_start.objt_name, sbfl.sbfl_starting_object ) as sbfl_starting_object_name',
'        , sbfl.sbfl_route',
'        , coalesce( conn.conn_name, sbfl.sbfl_route ) as sbfl_route_name',
'        , sbfl.sbfl_last_completed',
'        , coalesce( objt_last.objt_name, sbfl.sbfl_last_completed ) as sbfl_last_completed_name',
'        , sbfl.sbfl_current',
'        , coalesce( objt_curr.objt_name, sbfl.sbfl_current ) as sbfl_current_name',
'        , objt_curr.objt_tag_name as sbfl_current_tag_name',
'        , sbfl.sbfl_last_update',
'        , sbfl.sbfl_status',
'        , lane.objt_bpmn_id as sbfl_current_lane',
'        , coalesce( lane.objt_name, lane.objt_bpmn_id) as sbfl_current_lane_name',
'        , sbfl.sbfl_process_level',
'        , sbfl.sbfl_reservation',
'        , objt_curr.objt_id as sbfl_current_objt_id',
'        , prcs.prcs_init_ts as sbfl_prcs_init_ts',
'     from flow_subflows sbfl',
'     join flow_processes prcs',
'       on prcs.prcs_id = sbfl.sbfl_prcs_id',
'left join flow_objects objt_start',
'       on objt_start.objt_bpmn_id = sbfl.sbfl_starting_object',
'      and objt_start.objt_dgrm_id = prcs.prcs_dgrm_id',
'left join flow_objects objt_curr',
'       on objt_curr.objt_bpmn_id = sbfl.sbfl_current',
'      and objt_curr.objt_dgrm_id = prcs.prcs_dgrm_id',
'left join flow_objects objt_last',
'       on objt_last.objt_bpmn_id = sbfl.sbfl_last_completed',
'      and objt_last.objt_dgrm_id = prcs.prcs_dgrm_id',
'left join flow_connections conn',
'       on conn.conn_bpmn_id = sbfl.sbfl_route',
'      and conn.conn_dgrm_id = prcs.prcs_dgrm_id',
'left join flow_objects lane',
'       on objt_curr.objt_objt_lane_id = lane.objt_id',
'     join flow_diagrams dgrm ',
'       on dgrm.dgrm_id = prcs.prcs_dgrm_id',
'with read only',
';',
'',
'create or replace view flow_task_inbox_vw',
'as ',
'   select sbfl_id',
'        , sbfl_sbfl_id',
'        , sbfl_prcs_id',
'        , sbfl_process_name',
'        , sbfl_prcs_init_ts',
'        , sbfl_dgrm_id',
'        , sbfl_dgrm_name',
'        , sbfl_dgrm_version',
'        , sbfl_dgrm_status',
'        , sbfl_dgrm_category',
'        , sbfl_starting_object',
'        , sbfl_starting_object_name',
'        , sbfl_route',
'        , sbfl_route_name',
'        , sbfl_last_completed',
'        , sbfl_last_completed_name',
'        , sbfl_current',
'        , sbfl_current_name',
'        , case sbfl_current_tag_name',
'            when ''bpmn:userTask'' then',
'              flow_usertask_pkg.get_url',
'              (',
'                pi_prcs_id => sbfl_prcs_id',
'              , pi_sbfl_id => sbfl_id',
'              , pi_objt_id => sbfl_current_objt_id',
'              )',
'            else null',
'          end link_text',
'        , sbfl_current_tag_name',
'        , sbfl_last_update',
'        , sbfl_status',
'        , sbfl_current_lane',
'        , sbfl_current_lane_name',
'        , sbfl_reservation',
'        , ( select prov.prov_var_vc2',
'              from flow_process_variables prov',
'             where prov.prov_var_name = ''BUSINESS_REF''',
'               and prov.prov_var_type = ''VARCHAR2''',
'               and prov.prov_prcs_id = sbfl.sbfl_prcs_id',
'          ) as sbfl_business_ref',
'     from flow_subflows_vw sbfl',
'    where sbfl_status = ''running''',
'with read only',
';',
'',
'',
'create or replace view flow_p0002_diagrams_vw',
'as',
' with instance_numbers as',
'(',
'  select dgrm_id',
'       , created_cnt',
'       , running_cnt',
'       , completed_cnt',
'       , terminated_cnt',
'       , error_cnt',
'       , created_cnt + running_cnt + completed_cnt + terminated_cnt + error_cnt as total_cnt',
'    from (select dgrm_id, prcs_status from flow_instances_vw)',
'   pivot (',
'     count(*) as cnt',
'     for prcs_status in ( ''created'' as created, ''running'' as running, ''completed'' as completed, ''terminated'' as terminated, ''error'' as error ) ',
'         )',
')',
'  select d.dgrm_id',
'       , d.dgrm_name',
'       , d.dgrm_version',
'       , d.dgrm_status',
'       , d.dgrm_category',
'       , d.dgrm_last_update',
'       , null as btn',
'       , apex_page.get_url(p_page => 7, p_items => ''P7_DGRM_ID'', p_values => d.dgrm_id) as edit_link',
'       , apex_page.get_url(p_page => 11, p_items => ''P11_DGRM_ID'', p_values => d.dgrm_id) as create_instance_link',
'       , decode(inst_nums.total_cnt, 0, null, inst_nums.total_cnt) as instances ',
'       , case when coalesce( (select count(*) from flow_objects objt where objt.objt_dgrm_id = d.dgrm_id), 0 ) = 0 then ''No'' else ''Yes'' end as diagram_parsed',
'       , case when coalesce( (select count(*) from flow_objects objt where objt.objt_dgrm_id = d.dgrm_id), 0 ) = 0 then ''fa-times-circle-o fa-lg u-danger-text'' else ''fa-check-circle-o fa-lg u-success-text'' end as diagram_parsed_icon',
'       , case dgrm_status',
'           when ''draft'' then ''fa fa-wrench''',
'           when ''released'' then ''fa fa-check''',
'           when ''deprecated'' then ''fa fa-ban''',
'           when ''archived'' then ''fa fa-archive''',
'         end as dgrm_status_icon',
'       , decode(inst_nums.created_cnt, 0, null, inst_nums.created_cnt) as instance_created',
'       , apex_page.get_url(p_page => 10, p_items => ''IR_PRCS_DGRM_NAME,IR_PRCS_DGRM_VERSION,IR_PRCS_STATUS'', p_values => dgrm_name||'',''||dgrm_version||'',created'', p_clear_cache => ''RP,RIR'') as instance_created_link',
'       , decode(inst_nums.running_cnt, 0, null, inst_nums.running_cnt) as instance_running',
'       , apex_page.get_url(p_page => 10, p_items => ''IR_PRCS_DGRM_NAME,IR_PRCS_DGRM_VERSION,IR_PRCS_STATUS'', p_values => dgrm_name||'',''||dgrm_version||'',running'', p_clear_cache => ''RP,RIR'') as instance_running_link',
'       , decode(inst_nums.completed_cnt, 0, null, inst_nums.completed_cnt) as instance_completed',
'       , apex_page.get_url(p_page => 10, p_items => ''IR_PRCS_DGRM_NAME,IR_PRCS_DGRM_VERSION,IR_PRCS_STATUS'', p_values => dgrm_name||'',''||dgrm_version||'',completed'', p_clear_cache => ''RP,RIR'') as instance_completed_link',
'       , decode(inst_nums.terminated_cnt, 0, null, inst_nums.terminated_cnt) as instance_terminated',
'       , apex_page.get_url(p_page => 10, p_items => ''IR_PRCS_DGRM_NAME,IR_PRCS_DGRM_VERSION,IR_PRCS_STATUS'', p_values => dgrm_name||'',''||dgrm_version||'',terminated'', p_clear_cache => ''RP,RIR'') as instance_terminated_link',
'       , decode(inst_nums.error_cnt, 0, null, inst_nums.error_cnt) as instance_error',
'       , apex_page.get_url(p_page => 10, p_items => ''IR_PRCS_DGRM_NAME,IR_PRCS_DGRM_VERSION,IR_PRCS_STATUS'', p_values => dgrm_name||'',''||dgrm_version||'',error'', p_clear_cache => ''RP,RIR'') as instance_error_link',
'       , apex_item.checkbox2(p_idx => 1, p_value => d.dgrm_id, p_attributes => ''data-name = "'' || dgrm_name || ''" data-version = "'' || dgrm_version || ''"'') as checkbox',
'  from flow_diagrams_vw d',
'left join instance_numbers inst_nums',
'       on inst_nums.dgrm_id = d.dgrm_id',
'with read only',
';',
'',
'',
'create or replace view flow_p0007_instances_counter_vw',
'as',
'  select distinct d.dgrm_id,',
'    sum(case when i.prcs_status = ''created'' then 1 else 0 end) over (partition by d.dgrm_id)  as created_instances,',
'    sum(case when i.prcs_status = ''running'' then 1 else 0 end) over (partition by d.dgrm_id) as running_instances,',
'    sum(case when i.prcs_status = ''completed'' then 1 else 0 end) over (partition by d.dgrm_id) as completed_instances,',
'    sum(case when i.prcs_status = ''terminated'' then 1 else 0 end) over (partition by d.dgrm_id) as terminated_instances,',
'    sum(case when i.prcs_status = ''error'' then 1 else 0 end) over (partition by d.dgrm_id) as error_instances',
'from flow_diagrams_vw d',
'left join flow_instances_vw i on i.dgrm_id = d.dgrm_id',
'with read only',
';',
'',
'create or replace view flow_p0008_instance_details_vw',
'as',
'  select ',
'       prcs_id,',
'       prcs_name,',
'       dgrm_name || '' - Version '' || dgrm_version as flow_diagram,',
'       prcs_status as status,',
'       prcs_init_ts as initialized_on,',
'       prcs_last_update as last_update_on,',
'       prcs_business_ref as business_reference',
'  from flow_instances_vw',
'with read only;',
'',
'create or replace view flow_p0008_subflows_vw',
'as',
'  select sbfl.sbfl_id',
'       , sbfl.sbfl_prcs_id',
'       , sbfl.sbfl_current_name as sbfl_current',
'       , sbfl.sbfl_starting_object_name as sbfl_starting_object',
'       , sbfl.sbfl_last_update',
'       , sbfl.sbfl_status',
'       , sbfl.sbfl_current_lane_name as sbfl_current_lane',
'       , sbfl.sbfl_reservation',
'       , case',
'          when sbfl.sbfl_status in (''split'', ''in subprocess'', ''waiting at gateway'', ''waiting for event'', ''waiting for timer'') then',
'            ''<span class="'' ||',
'            case sbfl.sbfl_status',
'              when ''split'' then ''fa fa-share-alt''',
'              when ''in subprocess'' then ''fa fa-share-alt''',
'              when ''waiting at gateway'' then ''fa fa-hand-stop-o''',
'              when ''waiting for timer'' then ''fa fa-clock-o''',
'              when ''waiting for event'' then ''fa fa-hand-stop-o''',
'            end ||',
'            ''"></span>''',
'          when sbfl.sbfl_status = ''error'' then ',
'            ''<button type="button" class="clickable-action t-Button t-Button--noLabel t-Button--icon" '' ||',
'            ''title="Re-start Previous Step" aria-label="Re-start Previous Step" '' ||',
'            ''data-prcs="'' || sbfl.sbfl_prcs_id || ''" data-sbfl="'' || sbfl.sbfl_id || ',
'            ''" data-action="restart-step"><span aria-hidden="true" class="fa fa-redo-arrow"></span></button>'' ',
'          else',
'            ''<button type="button" class="clickable-action t-Button t-Button--noLabel t-Button--icon" '' ||',
'            ''title="'' || apex_lang.message(p_name => ''APP_COMPLETE_STEP'') || ''" aria-label="'' || apex_lang.message(p_name => ''APP_COMPLETE_STEP'') || ''" '' ||',
'            ''data-prcs="'' || sbfl.sbfl_prcs_id || ''" data-sbfl="'' || sbfl.sbfl_id || ',
'            ''" data-action="complete-step"><span aria-hidden="true" class="fa fa-sign-out"></span></button>'' ',
'         end as action_html',
'       , case ',
'          when sbfl.sbfl_status = ''running'' then ',
'            ''<button type="button" class="clickable-action t-Button t-Button--noLabel t-Button--icon" '' ||',
'            case ',
'                when sbfl.sbfl_reservation is null then ''title="'' || apex_lang.message(p_name => ''APP_RESERVE_STEP'') ||''" aria-label="'' || apex_lang.message(p_name => ''APP_RESERVE_STEP'') ||''" ''',
'                when sbfl.sbfl_reservation is not null then ''title="'' || apex_lang.message(p_name => ''APP_RELEASE_STEP'') ||''" aria-label="'' || apex_lang.message(p_name => ''APP_RELEASE_STEP'') ||''" ''',
'            end || ''data-prcs="'' || sbfl.sbfl_prcs_id || ''" data-sbfl="'' || sbfl.sbfl_id || ''" data-action="'' ||',
'            case ',
'                when sbfl.sbfl_reservation is null then ''reserve-step''',
'                when sbfl.sbfl_reservation is not null then ''release-step''',
'              end || ''"><span aria-hidden="true" class="'' ||',
'              case',
'                when sbfl.sbfl_reservation is null then  ''fa fa-lock''',
'                when sbfl.sbfl_reservation is not null then ''fa fa-unlock''',
'              end || ''"></span></button>''  ',
'          else',
'            null  ',
'         end as reservation_html',
'       , null as actions   ',
'       , apex_item.checkbox2(p_idx => 2, p_value => sbfl.sbfl_id, p_attributes => ''data-status="''|| sbfl.sbfl_status ||''" data-prcs="''|| sbfl.sbfl_prcs_id ||''" data-reservation="''|| sbfl.sbfl_reservation ||''"'') as checkbox',
'       , case ',
'            when sbfl.sbfl_status = ''error'' then ',
'              ''<button type="button" class="t-Button t-Button--icon t-Button--link t-Button--iconLeft js-actionButton" '' || ',
'              ''data-prcs="'' || sbfl.sbfl_prcs_id || ''" data-sbfl="'' || sbfl.sbfl_id || ''"data-action="restart-step" ''||',
'              ''><span aria-hidden="true" class="t-Icon t-Icon--left fa fa-redo-arrow"></span>Restart</button>''',
'            when sbfl.sbfl_status = ''running'' then ',
'              ''<button type="button" class="t-Button t-Button--icon t-Button--link t-Button--iconLeft js-actionButton" '' || ',
'              ''data-prcs="'' || sbfl.sbfl_prcs_id || ''" data-sbfl="'' || sbfl.sbfl_id || ''"data-action="complete-step" ''||',
'              ''><span aria-hidden="true" class="t-Icon t-Icon--left fa fa-sign-out"></span>Complete</button>''',
'            end as quick_action_hmtl ',
'    from flow_subflows_vw sbfl',
'with read only',
';',
'',
'create or replace view flow_p0008_variables_vw',
'as',
'  select apex_item.checkbox( p_idx => 3, p_value => prov_var_name, p_attributes => ''data-prcs="''|| prov_prcs_id || ''"'') as checkbox,',
'       null as action,',
'       prov_prcs_id,',
'       prov_var_name,',
'       prov_var_type,',
'       case',
'            when prov_var_vc2 is not null then prov_var_vc2',
'            when prov_var_num is not null then cast(prov_var_num as varchar2(4000))',
'            when prov_var_date is not null then to_char(prov_var_date, v(''APP_DATE_TIME_FORMAT''))',
'            when prov_var_clob is not null then cast(dbms_lob.substr(prov_var_clob, 4000) as  varchar2(4000))',
'        end as prov_var_value,',
'        case when instr(prov_var_name, '':route'') > 0 then ''true'' else ''false'' end is_gateway_route',
'    from flow_instance_variables_vw',
'with read only;',
'',
'create or replace view flow_p0008_vw',
'as',
'  select dgrm_content',
'       , prcs_id',
'       , all_completed',
'       , last_completed',
'       , all_errors',
'       , all_current',
'    from flow_instance_details_vw',
'with read only;',
'',
'create or replace view flow_p0010_branches_vw',
'as',
'  select prcs.prcs_id',
'       , sbfl.sbfl_id',
'       , coalesce( conn.conn_name, conn.conn_bpmn_id ) as d',
'       , conn.conn_bpmn_id as r',
'    from flow_connections conn',
'    join flow_objects src_objt',
'      on src_objt.objt_id = conn.conn_src_objt_id',
'    join flow_subflows sbfl',
'      on sbfl.sbfl_current = src_objt.objt_bpmn_id',
'    join flow_processes prcs',
'      on prcs.prcs_id = sbfl.sbfl_prcs_id',
'     and prcs.prcs_dgrm_id = src_objt.objt_dgrm_id',
'     and prcs.prcs_dgrm_id = conn.conn_dgrm_id',
'   where conn.conn_tag_name = ''bpmn:sequenceFlow''',
'order by conn.conn_name asc',
'with read only',
';',
'',
'create or replace view flow_p0010_instances_vw',
'as',
'   select null as view_process',
'        , prcs_id',
'        , prcs_name',
'        , prcs_dgrm_id',
'        , prcs_dgrm_name',
'        , prcs_dgrm_version',
'        , prcs_dgrm_status',
'        , prcs_dgrm_category',
'        , prcs_status',
'        , prcs_status_icon',
'        , prcs_init_date',
'        , prcs_last_update',
'        , prcs_business_ref',
'        , ''<button type="button" title="'' || btn_title || ''" aria-label="'' || btn_title || ''"'' ||',
'          '' class="clickable-action t-Button t-Button--noLabel t-Button--icon"'' ||',
'          '' data-prcs="'' || prcs_id || ''" data-action="'' || btn_action || ''"'' ||',
'          ''><span aria-hidden="true" class="'' || btn_icon_class || ''"></span></button>'' ||',
'          term_btn ||',
'          ''<button type="button" title="'' || apex_lang.message(p_name => ''APP_DELETE_INSTANCE'') || ''" aria-label="'' || apex_lang.message(p_name => ''APP_DELETE_INSTANCE'') || ''"'' ||',
'          '' class="clickable-action t-Button t-Button--noLabel t-Button--icon"'' ||',
'          '' data-prcs="'' || prcs_id || ''" data-action="delete"'' ||',
'          ''><span aria-hidden="true" class="t-Icon fa fa-trash"></span></button>''',
'          as btn',
'        , apex_item.checkbox2(p_idx => 1, p_value => prcs_id, p_attributes => ''data-prcs = "'' || prcs_id || ''" data-status = "'' || prcs_status ||''"'') as checkbox',
'        , ''<button type="button" class="t-Button t-Button--icon t-Button--iconLeft t-Button--link js-actionButton"''||',
'          '' data-prcs="'' || prcs_id || ''" data-name="'' || prcs_name || ''" data-action="view-flow-instance"'' ||',
'          ''><span aria-hidden="true" class="t-Icon t-Icon--left fa fa-eye"></span>View</button>'' as view_instance',
'     from ( select prcs_id',
'                 , prcs_name',
'                 , dgrm_id as prcs_dgrm_id',
'                 , dgrm_name as prcs_dgrm_name',
'                 , dgrm_version as prcs_dgrm_version',
'                 , dgrm_status as prcs_dgrm_status',
'                 , dgrm_category as prcs_dgrm_category',
'                 , prcs_status',
'                 , prcs_init_ts as prcs_init_date',
'                 , prcs_last_update',
'                 , prcs_business_ref',
'                 , case prcs_status',
'                     when ''running'' then apex_lang.message(p_name => ''APP_RESET_INSTANCE'')',
'                     when ''created'' then apex_lang.message(p_name => ''APP_START_INSTANCE'')',
'                     when ''completed'' then apex_lang.message(p_name => ''APP_RESET_INSTANCE'')',
'                     when ''error'' then apex_lang.message(p_name => ''APP_RESET_INSTANCE'')',
'                   end as btn_title',
'                 , ''t-Icon fa '' ||',
'                   case prcs_status',
'                     when ''running'' then ''fa-undo''',
'                     when ''created'' then ''fa-play''',
'                     when ''completed'' then ''fa-undo''',
'                     when ''error'' then ''fa-undo''',
'                   end as btn_icon_class',
'                 , case prcs_status',
'                     when ''running'' then ''reset''',
'                     when ''created'' then ''start''',
'                     when ''completed'' then ''reset''',
'                     when ''error'' then ''reset''',
'                   end as btn_action',
'                 , case prcs_status',
'                     when ''running'' then ''fa-play-circle-o''',
'                     when ''created'' then ''fa-plus-circle-o''',
'                     when ''completed'' then ''fa-check-circle-o''',
'                     when ''terminated'' then ''fa-stop-circle-o''',
'                     when ''error'' then ''fa-exclamation-circle-o''',
'                   end as prcs_status_icon',
'                 , case ',
'                     when prcs_status in (''running'', ''error'') then ',
'                      ''<button type="button" class="clickable-action t-Button t-Button--noLabel t-Button--icon" '' ||',
'                      ''title="'' || apex_lang.message(p_name => ''APP_TERMINATE_INSTANCE'') || ''" aria-label="'' || apex_lang.message(p_name => ''APP_TERMINATE_INSTANCE'') || ''" '' ||',
'                      '' data-prcs="'' || prcs_id || ''" data-action="terminate"'' ||',
'                      ''><span aria-hidden="true" class="t-Icon fa fa-stop-circle"></span></button>''  ',
'                     else',
'                       null  ',
'                   end as term_btn ',
'              from flow_instances_vw',
'          )',
'with read only',
';',
'',
'create or replace view flow_p0010_routes_vw',
'as',
'  select prcs.prcs_id',
'       , sbfl.sbfl_id',
'       , objt.objt_bpmn_id',
'       , coalesce( conn.conn_name, conn.conn_bpmn_id ) as d',
'       , conn.conn_bpmn_id as r',
'       , case conn.conn_is_default when 1 then ''Y'' else ''N'' end conn_is_default',
'    from flow_connections conn',
'    join flow_objects objt',
'      on objt.objt_id = conn.conn_src_objt_id',
'    join flow_processes prcs',
'      on prcs.prcs_dgrm_id = conn.conn_dgrm_id',
'     and prcs.prcs_dgrm_id = objt.objt_dgrm_id',
'    join flow_subflows sbfl',
'      on sbfl.sbfl_prcs_id = prcs.prcs_id',
'   where conn.conn_tag_name = ''bpmn:sequenceFlow''',
'     and objt.objt_tag_name in (''bpmn:exclusiveGateway'', ''bpmn:inclusiveGateway'')',
'with read only;',
'',
'-- dev version of flow_p0010_subflows_vw exposing all moving parts',
'-- not installed by default',
'create or replace view flow_p0010_subflows_debug_vw',
'as',
'  select sbfl.sbfl_id',
'       , sbfl.sbfl_sbfl_id',
'       , sbfl.sbfl_prcs_id',
'       , sbfl.sbfl_process_name',
'       , sbfl.sbfl_dgrm_id',
'       , sbfl.sbfl_sbfl_dgrm_id',
'       , sbfl.sbfl_dgrm_name',
'       , sbfl.sbfl_dgrm_version',
'       , sbfl.sbfl_dgrm_status',
'       , sbfl.sbfl_dgrm_category',
'       , sbfl_route',
'       , sbfl_route_name',
'       , sbfl_last_completed',
'       , sbfl_last_completed_name',
'       , sbfl.sbfl_current',
'       , sbfl.sbfl_current_name ',
'       , sbfl.sbfl_current_tag_name',
'       , sbfl.sbfl_starting_object',
'       , sbfl.sbfl_starting_object_name ',
'       , sbfl.sbfl_last_update',
'       , sbfl.sbfl_status',
'       , sbfl.sbfl_current_lane',
'       , sbfl.sbfl_current_lane_name',
'       , sbfl.sbfl_reservation',
'       , sbfl.sbfl_process_level',
'       , case',
'          when sbfl.sbfl_status in (''split'', ''in subprocess'', ''waiting at gateway'', ''waiting for event'', ''waiting for timer'') then',
'            ''<span class="'' ||',
'            case sbfl.sbfl_status',
'              when ''split'' then ''fa fa-share-alt''',
'              when ''in subprocess'' then ''fa fa-share-alt''',
'              when ''waiting at gateway'' then ''fa fa-hand-stop-o''',
'              when ''waiting for timer'' then ''fa fa-clock-o''',
'              when ''waiting for event'' then ''fa fa-hand-stop-o''',
'            end ||',
'            ''"></span>''',
'          when sbfl.sbfl_status = ''error'' then ',
'            ''<button type="button" class="clickable-action t-Button t-Button--noLabel t-Button--icon" '' ||',
'            ''title="Re-start Previous Step" aria-label="Re-start Previous Step" '' ||',
'            ''data-prcs="'' || sbfl.sbfl_prcs_id || ''" data-sbfl="'' || sbfl.sbfl_id || ',
'            ''" data-action="restart_step"><span aria-hidden="true" class="fa fa-redo-arrow"></span></button>'' ',
'          else',
'            ''<button type="button" class="clickable-action t-Button t-Button--noLabel t-Button--icon" '' ||',
'            ''title="Go to next step" aria-label="Go to next step" '' ||',
'            ''data-prcs="'' || sbfl.sbfl_prcs_id || ''" data-sbfl="'' || sbfl.sbfl_id || ',
'            ''" data-action="next_step"><span aria-hidden="true" class="fa fa-sign-out"></span></button>'' ',
'         end as action_html',
'       , case ',
'          when sbfl.sbfl_status = ''running'' then ',
'            ''<button type="button" class="clickable-action t-Button t-Button--noLabel t-Button--icon" '' ||',
'            case ',
'                when sbfl.sbfl_reservation is null then ''title="Reserve Step" aria-label="Reserve Step" ''',
'                when sbfl.sbfl_reservation is not null then ''title="Release Reservation" aria-label="Release Reservation" ''',
'            end || ''data-prcs="'' || sbfl.sbfl_prcs_id || ''" data-sbfl="'' || sbfl.sbfl_id || ''" data-action="'' ||',
'            case ',
'                when sbfl.sbfl_reservation is null then ''reserve''',
'                when sbfl.sbfl_reservation is not null then ''release''',
'              end || ''"><span aria-hidden="true" class="'' ||',
'              case',
'                when sbfl.sbfl_reservation is null then  ''fa fa-lock''',
'                when sbfl.sbfl_reservation is not null then ''fa fa-unlock''',
'              end || ''"></span></button>''  ',
'          else',
'            null  ',
'         end as reservation_html',
'    from flow_subflows_vw sbfl',
'with read only',
';',
'',
'create or replace view flow_p0010_vw',
'as',
'  select dgrm_content',
'       , prcs_id',
'       , all_completed',
'       , last_completed',
'       , all_errors',
'       , all_current',
'    from flow_instance_details_vw',
'with read only;',
'',
'create or replace view flow_p0013_attributes_vw',
'as',
'  select objt.objt_bpmn_id',
'       , obat_key',
'       , case',
'           when obat_num_value is not null then cast(obat_num_value as varchar2(4000))',
'           when obat_date_value is not null then cast(obat_date_value as varchar2(4000))',
'           when obat_vc_value is not null then obat_vc_value',
'           when obat_clob_value is not null then ''[clob]''',
'         end as obat_value',
'       , prcs.prcs_id',
'    from flow_object_attributes obat',
'    join flow_objects objt',
'      on obat.obat_objt_id = objt.objt_id',
'    join flow_processes prcs',
'      on objt.objt_dgrm_id = prcs.prcs_dgrm_id',
'with read only;',
'',
'create or replace view flow_p0013_expressions_vw',
'as',
'  select objt.objt_bpmn_id',
'       , expr.expr_set',
'       , expr.expr_var_name',
'       , expr.expr_var_type',
'       , expr.expr_type',
'       , expr.expr_expres'))
);
wwv_flow_api.component_end;
end;
/
begin
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2020.03.31'
,p_release=>'20.1.0.00.13'
,p_default_workspace_id=>2400405578329584
,p_default_application_id=>100
,p_default_id_offset=>0
,p_default_owner=>'FLOWS4APEX'
);
wwv_flow_api.append_to_install_script(
 p_id=>wwv_flow_api.id(8153583912683409)
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'sion',
'       , prcs.prcs_id',
'    from flow_object_expressions expr',
'    join flow_objects objt',
'      on expr.expr_objt_id = objt.objt_id',
'    join flow_processes prcs',
'      on objt.objt_dgrm_id = prcs.prcs_dgrm_id',
'with read only;',
'',
'create or replace view flow_p0013_subflow_log_vw',
'as',
'  select lgsf.lgsf_prcs_id',
'       , lgsf.lgsf_objt_id',
'       , lgsf.lgsf_sbfl_id',
'       , lgsf.lgsf_sbfl_process_level',
'       , lgsf.lgsf_last_completed',
'       , lgsf.lgsf_status_when_complete',
'       , lgsf.lgsf_was_current',
'       , lgsf.lgsf_started',
'       , lgsf.lgsf_completed',
'       , lgsf.lgsf_reservation',
'       , lgsf.lgsf_user',
'       , lgsf.lgsf_comment',
'    from flow_subflow_event_log lgsf',
'with read only;',
'',
'create or replace view flow_p0013_subflows_vw',
'as',
'  select sbfl.sbfl_id',
'       , sbfl.sbfl_prcs_id',
'       , sbfl.sbfl_process_level',
'       , sbfl.sbfl_last_completed',
'       , sbfl.sbfl_current',
'       , sbfl.sbfl_status',
'       , sbfl.sbfl_became_current',
'       , sbfl.sbfl_work_started',
'       , sbfl.sbfl_reservation',
'       , sbfl.sbfl_last_update',
'    from flow_subflows sbfl',
'with read only;',
'',
'create or replace view flow_p0013_variable_log_vw',
'as',
'  select lgvr_prcs_id',
'       , lgvr_objt_id',
'       , lgvr_var_name',
'       , lgvr_expr_set',
'       , lgvr_timestamp',
'       , lgvr_var_type',
'       , case',
'           when lgvr_var_vc2 is not null then lgvr_var_vc2',
'           when lgvr_var_num is not null then cast(lgvr_var_num as varchar2(4000))',
'           when lgvr_var_date is not null then cast(lgvr_var_date as varchar2(4000))',
'           when lgvr_var_clob is not null then ''[clob]''',
'         end as lgvr_value',
'    from flow_variable_event_log',
'with read only;',
'',
'create or replace view flow_p0014_instance_log_vw',
'as',
'  select lgpr.lgpr_prcs_id',
'       , lgpr.lgpr_prcs_name',
'       , lgpr.lgpr_business_id',
'       , lgpr.lgpr_prcs_event',
'       , case lgpr.lgpr_prcs_event',
'           when ''started'' then ''fa-play-circle-o''',
'           when ''running'' then ''fa-play-circle-o''',
'           when ''created'' then ''fa-plus-circle-o''',
'           when ''completed'' then ''fa-check-circle-o''',
'           when ''terminated'' then ''fa-stop-circle-o''',
'           when ''error'' then ''fa-exclamation-circle-o''',
'           when ''reset'' then ''fa-undo''',
'           when ''restart step'' then ''fa-undo''',
'         end as lgpr_prcs_event_icon',
'       , lgpr.lgpr_timestamp',
'       , lgpr.lgpr_user',
'       , lgpr.lgpr_comment',
'       , lgpr_error_info',
'    from flow_instance_event_log lgpr',
'with read only;',
'',
'create or replace view flow_p0014_subflow_log_vw',
'as',
'  select distinct lgsf.lgsf_prcs_id',
'                , coalesce(objt.objt_name, lgsf.lgsf_objt_id) as completed_object',
'                , lgsf.lgsf_sbfl_id',
'                , lgsf.lgsf_sbfl_process_level',
'                , lgsf.lgsf_last_completed',
'                , lgsf.lgsf_status_when_complete',
'                , lgsf.lgsf_was_current',
'                , lgsf.lgsf_started',
'                , lgsf.lgsf_completed',
'                , lgsf.lgsf_reservation',
'                , lgsf.lgsf_user',
'                , lgsf.lgsf_comment',
'             from flow_subflow_event_log lgsf',
'             join flow_objects objt',
'               on lgsf.lgsf_objt_id = objt.objt_bpmn_id',
'with read only;',
'',
'create or replace view flow_p0014_subflows_vw',
'as',
'  select distinct sbfl.sbfl_id',
'                , sbfl.sbfl_prcs_id',
'                , sbfl.sbfl_process_level',
'                , sbfl.sbfl_last_completed',
'                , coalesce(objt.objt_name, sbfl.sbfl_current) as current_object',
'                , sbfl.sbfl_status',
'                , sbfl.sbfl_became_current',
'                , sbfl.sbfl_work_started',
'                , sbfl.sbfl_reservation',
'                , sbfl.sbfl_last_update',
'             from flow_subflows sbfl',
'             join flow_objects objt',
'               on sbfl.sbfl_current = objt.objt_bpmn_id',
'with read only;',
'',
'create or replace view flow_p0014_variable_log_vw',
'as',
'  select lgvr_prcs_id',
'       , lgvr_sbfl_id',
'       , lgvr_objt_id',
'       , lgvr_var_name',
'       , lgvr_expr_set',
'       , lgvr_timestamp',
'       , lgvr_var_type',
'       , case',
'           when lgvr_var_vc2 is not null then lgvr_var_vc2',
'           when lgvr_var_num is not null then cast(lgvr_var_num as varchar2(4000))',
'           when lgvr_var_date is not null then cast(lgvr_var_date as varchar2(4000))',
'           when lgvr_var_clob is not null then ''[clob]''',
'         end as lgvr_value',
'    from flow_variable_event_log',
'with read only;',
''))
);
null;
wwv_flow_api.component_end;
end;
/
